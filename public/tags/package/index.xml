<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Package on experiments with R</title>
    <link>/tags/package/</link>
    <description>Recent content in Package on experiments with R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 16 Aug 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/package/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>shiny app as R package v2</title>
      <link>/2017/08/16/shiny-app-as-r-package-v2/</link>
      <pubDate>Wed, 16 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/08/16/shiny-app-as-r-package-v2/</guid>
      <description>In my previous post I explored the possibility of wrapping a shiny app as an R package. I falsely stated that you cannot have a directory-based shiny app with global.R. Based on this question on Stack Overflow I proved the contrary. It is actually possible but with serious limitations in my opinion so I still strongly advise the function based approach.
You can put basically anything in the inst folder of your package and use those as is.</description>
    </item>
    
    <item>
      <title>shiny app as R package</title>
      <link>/2017/08/09/shiny-app-as-r-package/</link>
      <pubDate>Wed, 09 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/08/09/shiny-app-as-r-package/</guid>
      <description>Background I love and use shiny regularly and I also try to modularize my work more and more. Naturally I started to wonder whether I could have a whole shiny app as an R package and then possibly a project organizing multiple apps together. The answer is yes as I suspected.
Several others already wrote about the topic, including Dean Attali and William Landau. However, I gained a deeper understanding by trying things out myself.</description>
    </item>
    
  </channel>
</rss>